import { CameraSettings } from 'scandit-react-native-datacapture-core/js/Camera+Related';
import { PointWithUnit } from 'scandit-react-native-datacapture-core/js/Common';
import { DataCaptureContext, DataCaptureMode } from 'scandit-react-native-datacapture-core/js/DataCaptureContext';
import { DefaultSerializeable } from 'scandit-react-native-datacapture-core/js/private/Serializeable';
import { BarcodeSelectionFeedback } from './BarcodeSelectionFeedback';
import { BarcodeSelectionListener } from './BarcodeSelectionListener';
import { BarcodeSelectionSettings } from './BarcodeSelectionSettings';
export declare class BarcodeSelection extends DefaultSerializeable implements DataCaptureMode {
    get isEnabled(): boolean;
    set isEnabled(isEnabled: boolean);
    get context(): DataCaptureContext | null;
    get feedback(): BarcodeSelectionFeedback;
    set feedback(feedback: BarcodeSelectionFeedback);
    get pointOfInterest(): PointWithUnit | null;
    set pointOfInterest(pointOfInterest: PointWithUnit | null);
    static get recommendedCameraSettings(): CameraSettings;
    private type;
    private _isEnabled;
    private _feedback;
    private _pointOfInterest;
    private settings;
    private privateContext;
    private get _context();
    private set _context(value);
    private listeners;
    private listenerProxy;
    private modeProxy;
    private isInListenerCallback;
    static forContext(context: DataCaptureContext | null, settings: BarcodeSelectionSettings): BarcodeSelection;
    private constructor();
    applySettings(settings: BarcodeSelectionSettings): Promise<void>;
    addListener(listener: BarcodeSelectionListener): void;
    removeListener(listener: BarcodeSelectionListener): void;
    reset(): Promise<void>;
    unfreezeCamera(): Promise<void>;
    private didChange;
}
